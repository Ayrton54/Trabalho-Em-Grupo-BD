// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho_Em_Grupo_BD.Context;

#nullable disable

namespace TrabalhoEmGrupoBD.Migrations
{
    [DbContext(typeof(OrganizadorContext))]
    [Migration("20231124184923_criacaotabelas")]
    partial class criacaotabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Autor", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("Emails");

                    b.ToTable("autors");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Cliente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emails")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("Emails");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Editora", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("editoras");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Email", b =>
                {
                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Emails");

                    b.ToTable("emails");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Emprestimo", b =>
                {
                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("clienteCodigo")
                        .HasColumnType("int");

                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("codigo"));

                    b.Property<int>("livrosEmprestimoISBN")
                        .HasColumnType("int");

                    b.HasKey("Data");

                    b.HasIndex("clienteCodigo");

                    b.HasIndex("livrosEmprestimoISBN");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Exemplares", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("DataAquisicao")
                        .HasColumnType("datetime2");

                    b.Property<int>("LivroId")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("LivroId");

                    b.ToTable("exemplares");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Livro", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISBN"));

                    b.Property<double>("Custo")
                        .HasColumnType("float");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("autorCodigo")
                        .HasColumnType("int");

                    b.Property<int>("editoraCodigo")
                        .HasColumnType("int");

                    b.HasKey("ISBN");

                    b.HasIndex("autorCodigo");

                    b.HasIndex("editoraCodigo");

                    b.ToTable("livros");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.LivrosEmprestimo", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISBN"));

                    b.Property<double>("Custo")
                        .HasColumnType("float");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISBN");

                    b.ToTable("livrosEmprestimos");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Autor", b =>
                {
                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Email", "email")
                        .WithMany()
                        .HasForeignKey("Emails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("email");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Cliente", b =>
                {
                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Email", "email")
                        .WithMany()
                        .HasForeignKey("Emails")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("email");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Emprestimo", b =>
                {
                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_Em_Grupo_BD.Models.LivrosEmprestimo", "livrosEmprestimo")
                        .WithMany()
                        .HasForeignKey("livrosEmprestimoISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("livrosEmprestimo");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Exemplares", b =>
                {
                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Trabalho_Em_Grupo_BD.Models.Livro", b =>
                {
                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Autor", "autor")
                        .WithMany()
                        .HasForeignKey("autorCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabalho_Em_Grupo_BD.Models.Editora", "editora")
                        .WithMany()
                        .HasForeignKey("editoraCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("editora");
                });
#pragma warning restore 612, 618
        }
    }
}
